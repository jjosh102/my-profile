@inject IGithubHttpClient GithubHttpClient

@if (_languages is not null && _languages.Any())
{
  <div class="my-4">
    <h3 class="text-sm font-bold text-[#c9d1d9] mb-2">Languages Used</h3>
    <div class="flex flex-wrap gap-2">
      @foreach (var language in _languages)
      {
        <div class="flex items-center space-x-1 text-[#c9d1d9]">
          <span class="w-2 h-2 rounded-full" style="background-color:@language.Key.GetLanguageBackgroundColor();"></span>
          <span class="text-sm">@language.Key</span>
        </div>
      }
    </div>
  </div>
}


@code {
  [Parameter]
  public string RepoName { get; set; } = string.Empty;

  private Dictionary<string, int> _languages = [];

  protected override async Task OnParametersSetAsync() => await FetchLanguages();

  private async Task FetchLanguages()
  {

    if (await GithubHttpClient.GetLanguagesUsedAsync(RepoName) is { } result
    && result.IsSuccess
    && result.Value is not null)
    {
      _languages = result.Value;
    }
  }
}