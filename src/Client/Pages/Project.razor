@page "/projects"
@inject IGithubHttpClient GitHubClient
@inject ISnackbar Snackbar
<PageTitle>Projects</PageTitle>

@if (githubProjects is null)
{
    <div class="d-flex justify-center flex-row flex-wrap gap-4">
        @for (int i = 0; i < 6; i++)
        {
            <MudPaper Outlined="true" Style="width:400px">
                <div class="mt-4">
                    <MudSkeleton Width="90%" Animation="Animation.Wave" />
                </div>
                <MudDivider Class="my-2" />
                <div class="ma-4" style="height:90px">
                    <MudSkeleton Width="90%" Animation="Animation.Wave" />
                </div>

                <MudStack Row="true" Class="ml-4 my-2">
                    <MudSkeleton Width="30%" Animation="Animation.Wave" />
                    <MudSkeleton Width="30%" Animation="Animation.Wave" />
                </MudStack>
            </MudPaper>
        }
    </div>
}
else
{
    <div class="d-flex justify-center flex-row flex-wrap gap-4">
        @foreach (var repo in githubProjects)
        {
            <MudPaper Outlined="true" Width="400px" Height="205px">
                <div class="mt-4">
                    <MudLink Typo="Typo.body1" Class="mb-2 mt-4" Href="@repo.HtmlUrl">
                        <MudIcon Icon="@Icons.Custom.Brands.GitHub" Color="Color.Default" Size="Size.Small" Class="mx-3" />
                        @repo.Name
                    </MudLink>
                </div>
                <MudDivider Class="my-2" />
                <div class="ma-4" style="height:90px">
                    <MudText Typo="Typo.body2" Align="Align.Justify"> @repo.Description</MudText>
                </div>

                <MudStack Row="true" Class="ml-4 my-2">
                    @if (isImageLoaded)
                    {
                        <MudLink Href="@repo.HtmlUrl" Typo="Typo.subtitle2">
                            <MudImage Src="@($"https://img.shields.io/github/last-commit/obaki102/{repo.Name}?style=flat-square")"
                                Class="rounded-lg" />
                        </MudLink>
                        <MudLink Href="@repo.HtmlUrl" Typo="Typo.subtitle2">
                            <MudImage
                                Src="@($"https://img.shields.io/github/stars/obaki102/{repo.Name}?style=flat-square&logo=github" )"
                                Class="rounded-lg" />
                        </MudLink>
                    }
                    else
                    {
                        <MudSkeleton Width="30%" Animation="Animation.Wave" />
                        <MudSkeleton Width="30%" Animation="Animation.Wave" />
                    }
                    @if (!string.IsNullOrWhiteSpace(repo.Homepage))
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Link" Size="Size.Small" Href="@repo.Homepage" />
                    }
                </MudStack>
            </MudPaper>
        }
    </div>
}

@code {
    private IReadOnlyList<GithubRepo>? githubProjects;
    private bool isImageLoaded = false;
    protected override async Task OnInitializedAsync()
    {
        var result = await GitHubClient.GetReposToBeShown();
        if (result.IsSuccess && result.Value is not null)
        {
            githubProjects = result.Value;
            StateHasChanged();
            await Task.Delay(3000);
            isImageLoaded = true;
        }
        else
        {
            Snackbar.Add("Sorry, unable to connect to Github API.", Severity.Error);
        }
    }
}
