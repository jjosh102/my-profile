@page "/projects"
@using MyProfile.Models
@using MyProfile.Pages.Components
@using MyProfile.Services.Github
@inject IGithubHttpClient GitHubClient
@inject ISnackbar Snackbar


<MudDataGrid Items="@githubProjects" Filterable="false" SortMode="@SortMode.None" Groupable="false" Dense="true"
    ColumnResizeMode="ResizeMode.Column">
    <Columns>
        <TemplateColumn CellClass="d-flex justify-start" Title="Projects">
            <CellTemplate>
                <MudStack Row="false">
                    <div class="mt-2">
                        <MudLink Typo="Typo.body1" Class="mb-2 mt-2" Href="@context.Item.HtmlUrl">
                            <MudIcon Icon="@Icons.Custom.Brands.GitHub" Color="Color.Default" Size="Size.Small"
                                Class="mx-2" />
                            @context.Item.Name
                        </MudLink>
                    </div>
            
                    <div class="ma-2">
                        <MudText Typo="Typo.body2" Align="Align.Justify"> @context.Item.Description</MudText>
                    </div>

                    <MudStack Row="true" Class="ml-2 my-2">
                        <MudLink Href="@context.Item.HtmlUrl" Typo="Typo.subtitle2">
                            <MudImage
                                Src="@($"https://img.shields.io/github/last-commit/obaki102/{context.Item.Name}?style=flat-square")"
                                Class="rounded-lg" />
                        </MudLink>
                        <MudLink Href="@context.Item.HtmlUrl" Typo="Typo.subtitle2">
                            <MudImage
                                Src="@($"https://img.shields.io/github/stars/obaki102/{context.Item.Name}?style=flat-square&logo=github" )"
                                Class="rounded-lg" />
                        </MudLink>
                        @if (!string.IsNullOrWhiteSpace(context.Item.Homepage))
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.Link" Size="Size.Small"
                                Href="@context.Item.Homepage" />
                        }
                    </MudStack>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>



@code {
    private IEnumerable<GithubRepo>? githubProjects;
    protected override async Task OnInitializedAsync()
    {
        var result = await GitHubClient.GetReposToBeShown();
        if (result.IsSuccess && result.Value is not null)
        {
            githubProjects = result.Value;
        }
        else
        {
            Snackbar.Add("Sorry, unable to connect to Github API.", Severity.Error);
        }
    }
}
