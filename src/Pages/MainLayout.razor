@inherits LayoutComponentBase
@inject IGithubHttpClient GitHubClient
@inject ISnackbar Snackbar

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />
<MudLayout>
   
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            <ErrorBoundary>
                <ChildContent>  @Body </ChildContent>
                <ErrorContent Context="Exception">
                    <MudChip T="string" Color="Color.Secondary">@Exception.GetType()</MudChip>
                    <MudChip T="string" Color="Color.Secondary">@Exception.Message</MudChip>
                    <p class="errorUI">Nothing to see here right now. Sorry!</p>
                </ErrorContent>
            </ErrorBoundary>
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <MudAppBar Elevation="0" Bottom="true">
                    <MudContainer MaxWidth="MaxWidth.Medium">
                        <MudDivider Class="mb-4" />
                        <MudStack Row="true">
                            <MudText Typo="Typo.subtitle2">© joshuajpiluden @DateTime.Now.Year</MudText>

                            <MudSpacer />

                            <MudLink Href="@lastCommitUrl" Typo="Typo.subtitle2">
                                <MudImage Src="https://img.shields.io/github/last-commit/obaki102/MyProfile?style=flat-square" Class="rounded-lg" />
                            </MudLink>
                        </MudStack>
                    </MudContainer>
                </MudAppBar>
            </MudHidden>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = DefaultTheme.Init();
    private bool _isDarkMode = true;
    private GithubLastCommit? githubLastCommit;
    private string lastDayUpdated = string.Empty;
    private string lastCommitUrl = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var lastCommitResult = await GitHubClient.GetRepoLastCommit("MyProfile");
        if (lastCommitResult.IsSuccess && lastCommitResult.Value is not null)
        {
            githubLastCommit = lastCommitResult.Value;
            lastCommitUrl = $"https://github.com/obaki102/MyProfile/commit/{githubLastCommit.Object.Sha}";
        }
        else
        {
            Snackbar.Add("Sorry, unable to connect to Github API.", Severity.Error);
        }

    }



}
